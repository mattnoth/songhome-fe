[{"/Users/mjn/sei/projects/songhome-fe/src/index.js":"1","/Users/mjn/sei/projects/songhome-fe/src/reportWebVitals.js":"2","/Users/mjn/sei/projects/songhome-fe/src/App.js":"3","/Users/mjn/sei/projects/songhome-fe/src/SongDetails.js":"4","/Users/mjn/sei/projects/songhome-fe/src/Navigation.js":"5","/Users/mjn/sei/projects/songhome-fe/src/Songlist.js":"6","/Users/mjn/sei/projects/songhome-fe/src/Createsong.js":"7","/Users/mjn/sei/projects/songhome-fe/src/SongComments.js":"8","/Users/mjn/sei/projects/songhome-fe/src/Dropzone.js":"9"},{"size":566,"mtime":1608092411106,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2121,"mtime":1608180995127,"results":"13","hashOfConfig":"11"},{"size":1320,"mtime":1608181228826,"results":"14","hashOfConfig":"11"},{"size":2287,"mtime":1608163491901,"results":"15","hashOfConfig":"11"},{"size":2138,"mtime":1608180934678,"results":"16","hashOfConfig":"11"},{"size":2891,"mtime":1608180731254,"results":"17","hashOfConfig":"11"},{"size":2268,"mtime":1608181895118,"results":"18","hashOfConfig":"11"},{"size":698,"mtime":1608172386708,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ujwdsq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/mjn/sei/projects/songhome-fe/src/index.js",[],["43","44"],"/Users/mjn/sei/projects/songhome-fe/src/reportWebVitals.js",[],"/Users/mjn/sei/projects/songhome-fe/src/App.js",[],"/Users/mjn/sei/projects/songhome-fe/src/SongDetails.js",[],"/Users/mjn/sei/projects/songhome-fe/src/Navigation.js",["45"],"import React, { useState } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport clsx from 'clsx'\nimport Drawer from '@material-ui/core/Drawer'\nimport { NavLink } from 'react-router-dom'\n\nconst Navigation = ({ useStyles }) => {\n\tconst classes = useStyles()\n\tconst [state, setState] = useState({\n\t\ttop: false,\n\t\tleft: false,\n\t\tbottom: false,\n\t\tright: false,\n\t})\n\n\tconst toggleDrawer = (anchor, open) => (event) => {\n\t\tif (\n\t\t\tevent.type === 'keydown' &&\n\t\t\t(event.key === 'Tab' || event.key === 'Shift')\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tsetState({ ...state, [anchor]: open })\n\t}\n\n\tconst list = (anchor) => (\n\t\t<div\n\t\t\tclassName={clsx(classes.list, {\n\t\t\t\t[classes.fullList]: anchor === 'top' || anchor === 'bottom',\n\t\t\t})}\n\t\t\trole='presentation'\n\t\t\tonClick={toggleDrawer(anchor, false)}\n\t\t\tonKeyDown={toggleDrawer(anchor, false)}>\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick='' key='createsong'>\n\t\t\t\t\t<ListItemIcon></ListItemIcon>\n\t\t\t\t\t<NavLink to='/'>\n\t\t\t\t\t\t<ListItemText primary='Home' />\n\t\t\t\t\t</NavLink>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick='' key='createsong'>\n\t\t\t\t\t<ListItemIcon></ListItemIcon>\n\t\t\t\t\t<NavLink to='createsong/'>\n\t\t\t\t\t\t<ListItemText primary='Create Song' />\n\t\t\t\t\t</NavLink>\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t{/* <Divider /> */}\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar position='static'>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge='start' className color='inherit' aria-label='menu'>\n\t\t\t\t\t\t<MenuIcon onClick={toggleDrawer('left', true)} />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6'>Songhome</Typography>\n\t\t\t\t\t{/* <Button color='inherit' href='createsong/'>\n\t\t\t\t\t\t<Typography>Create Song</Typography>\n\t\t\t\t\t</Button> */}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tanchor='left'\n\t\t\t\topen={state['left']}\n\t\t\t\tonClose={toggleDrawer('left', false)}>\n\t\t\t\t{list('left')}\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default Navigation\n","/Users/mjn/sei/projects/songhome-fe/src/Songlist.js",["46","47","48","49","50","51"],"import React, { useState, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Axios from 'axios'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\n\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\n\nimport IconButton from '@material-ui/core/IconButton'\n\nimport ReactPlayer from 'react-player'\n\nconst Songlist = ({ routerProps, baseUrl, theme, useStyles }) => {\n\tconst classes = useStyles()\n\tconst [songlist, setSonglist] = useState([])\n\tconst songsUrl = `songs/`\n\n\tuseEffect(function () {\n\t\tAxios(baseUrl + songsUrl)\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tsetSonglist(data.data)\n\t\t\t})\n\t\t\t.catch(console.error)\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<Container maxWidth='lg'>\n\t\t\t\t<Grid container spacing={4} justify='center'>\n\t\t\t\t\t{songlist.map((song) => (\n\t\t\t\t\t\t<Grid item xs={12} sm={6} lg={4}>\n\t\t\t\t\t\t\t<NavLink to={'/song/' + song.id}>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t<Typography component='h5' variant='h5'>\n\t\t\t\t\t\t\t\t\t\t\t\t{song.name}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant='subtitle1' color='textSecondary'>\n\t\t\t\t\t\t\t\t\t\t\t\t{song.status}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t{/* <img src={song.image} className='image-paper' alt='' /> */}\n\t\t\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.cover}\n\t\t\t\t\t\t\t\t\t\t\t\timage={song.image}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle='Live from space album cover'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ReactPlayer\n\t\t\t\t\t\t\t\t\t\t\t\turl={song.file}\n\t\t\t\t\t\t\t\t\t\t\t\twidth='400px'\n\t\t\t\t\t\t\t\t\t\t\t\theight='50px'\n\t\t\t\t\t\t\t\t\t\t\t\tplaying={false}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols={true}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default Songlist\n","/Users/mjn/sei/projects/songhome-fe/src/Createsong.js",["52"],"import React, { useState } from 'react'\nimport Axios from 'axios'\nimport Dropzone from './Dropzone'\nimport { Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router'\n\nconst Createsong = ({ baseUrl }) => {\n\tconst [loading, setLoading] = useState(false)\n\n\tconst initialState = {\n\t\tname: '',\n\t\timage: '',\n\t\tfile: '',\n\t\trelease_date: '',\n\t\tbpm: '',\n\t\tstatus: '',\n\t\tkey: '',\n\t\tlyrics: '',\n\t\twriters: {\n\t\t\tname: '',\n\t\t\tpub_percent: '',\n\t\t},\n\t\tgenres: {\n\t\t\tname: '',\n\t\t},\n\t\ttags: {\n\t\t\tname: '',\n\t\t},\n\t}\n\n\tlet history = useHistory()\n\tconst [file, setFile] = useState('')\n\tconst [image, setImage] = useState('')\n\n\tconst [formState, setFormState] = useState(initialState)\n\tconst url = `${baseUrl}songs/`\n\n\tconst handleChange = (e) => {\n\t\tsetFormState({ ...formState, [e.target.id]: e.target.value })\n\t}\n\n\tconst handleSubmit = function (e) {\n\t\te.preventDefault()\n\n\t\tconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\n\n\t\tlet fd = new FormData()\n\t\tfd.append('file', file)\n\t\tfd.append('image', image)\n\t\tfd.append('name', formState.name)\n\t\tfd.append('status', formState.status)\n\t\tfd.append('bpm', formState.bpm)\n\t\tfd.append('key', formState.key)\n\n\t\tsetLoading(true)\n\n\t\tAxios.post(url, fd, config).then((response) => {\n\t\t\tconsole.log(response)\n\t\t\tsetLoading(false)\n\t\t\tlet newId = response.data.id\n\n\t\t\thistory.push(`/song/${newId}`)\n\t\t})\n\t}\n\n\tif (loading) {\n\t\treturn <div> uploading....... </div>\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>CREATE SONG</div>\n\n\t\t\t<form action='submit' onSubmit={handleSubmit}>\n\t\t\t\t<label htmlFor='Song Name'> Song Name </label>\n\t\t\t\t<input type='text' id='name' onChange={handleChange} />\n\t\t\t\t<br />\n\t\t\t\t<p>Drop your music file here! </p>\n\t\t\t\t<Dropzone file={file} setFile={setFile} />\n\n\t\t\t\t<label htmlFor='status'> status </label>\n\t\t\t\t<input type='text' id='status' onChange={handleChange} />\n\t\t\t\t<br />\n\n\t\t\t\t<p>Drop your image file here! </p>\n\t\t\t\t<Dropzone file={image} setFile={setImage} />\n\n\t\t\t\t<label htmlFor='BPM'> BPM </label>\n\t\t\t\t<input type='text' id='bpm' onChange={handleChange} />\n\t\t\t\t<br />\n\n\t\t\t\t{/* <label htmlFor='Release Date'> Release Date </label>\n\t\t\t\t<input type='text' id='release_date' onChange={handleChange} />\n\t\t\t\t<br /> */}\n\n\t\t\t\t<label htmlFor='key'> Key </label>\n\t\t\t\t<input type='text' id='key' onChange={handleChange} />\n\t\t\t\t<br />\n\n\t\t\t\t{/* <label htmlFor='writer'> writer </label>\n\t\t\t\t<input type='text' id='writers' onChange={handleChange} />\n\t\t\t\t<br /> */}\n\n\t\t\t\t<button onClick={handleSubmit}> Submit </button>\n\n\t\t\t\t{/* <label htmlFor='Song Name'> Song Name </label>\n\t\t\t\t<input type='text' id='name' onChange={handleChange} />\n\t\t\t\t<br />\n\t\t\t\t<label htmlFor='Song Name'> Song Name </label>\n\t\t\t\t<input type='text' id='name' onChange={handleChange} />\n\t\t\t\t<br />\n\t\t\t\t<label htmlFor='Song Name'> Song Name </label>\n\t\t\t\t<input type='text' id='name' onChange={handleChange} /> */}\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default Createsong\n","/Users/mjn/sei/projects/songhome-fe/src/SongComments.js",["53","54","55"],"/Users/mjn/sei/projects/songhome-fe/src/Dropzone.js",["56"],"import React from 'react';\nimport './App.css'\n\nimport Axios from 'axios'\n\nimport { useDropzone } from 'react-dropzone'\n\n// create state for writers / genres, and then\n// drag n drop packaage\n\nfunction Basic({ file, setFile, music }) {\n\tconst { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n\t\tonDrop: (files) => setFile(files[0]),\n\t})\n\n\tconst files = acceptedFiles.map((file) => (\n\t\t<li key={file.path}>\n\t\t\t{file.path} - {file.size} bytes\n\t\t</li>\n\t))\n\n\treturn (\n\t\t<div className='dropzone-container'>\n\t\t\t<div {...getRootProps({ className: 'dropzone' })}>\n\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t<p> DRAG FILE HERE</p>\n\t\t\t\t<ul>{files}</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Basic;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":14,"column":10,"nodeType":"63","messageId":"64","endLine":14,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":13,"column":8,"nodeType":"63","messageId":"64","endLine":13,"endColumn":24},{"ruleId":"61","severity":1,"message":"67","line":14,"column":8,"nodeType":"63","messageId":"64","endLine":14,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":15,"column":8,"nodeType":"63","messageId":"64","endLine":15,"endColumn":20},{"ruleId":"61","severity":1,"message":"69","line":17,"column":8,"nodeType":"63","messageId":"64","endLine":17,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":33,"column":5,"nodeType":"72","endLine":33,"endColumn":7,"suggestions":"73"},{"ruleId":"61","severity":1,"message":"74","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},{"ruleId":"61","severity":1,"message":"75","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":15},{"ruleId":"61","severity":1,"message":"76","line":12,"column":9,"nodeType":"63","messageId":"64","endLine":12,"endColumn":19},{"ruleId":"61","severity":1,"message":"77","line":12,"column":21,"nodeType":"63","messageId":"64","endLine":12,"endColumn":34},{"ruleId":"61","severity":1,"message":"78","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'IconButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'baseUrl' and 'songsUrl'. Either include them or remove the dependency array.","ArrayExpression",["81"],"'Redirect' is defined but never used.","'songUrl' is assigned a value but never used.","'taskStatus' is assigned a value but never used.","'setTaskStatus' is assigned a value but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [baseUrl, songsUrl]",{"range":"84","text":"85"},[1063,1065],"[baseUrl, songsUrl]"]